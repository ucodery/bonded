[tox]
isolated_build = True
envlist = urllib3,attrs,pyyaml

[testenv]
allowlist_externals=git
changedir={toxworkdir}{/}{envname}
download=true
deps = {env:PKG}=={env:VER}
commands_pre =
    - git -c advice.detachedHead=false clone git@github.com:{env:ORG:{env:PKG}}/{env:PKG}.git --depth 1 --branch {env:VER} --quiet

[testenv:urllib3]
setenv =
    PKG=urllib3
    VER=1.26.11
deps = {env:PKG}[socks,secure,brotli]=={env:VER}
commands_pre =
    {[testenv]commands_pre}
    python -m pip -qqq install -r urllib3/docs/requirements.txt
commands =
    python -m bonded \
      urllib3/ \
      --requirements=urllib3/docs/requirements.txt \
      --pyproject= \
      --setup=urllib3/setup.cfg \
      # requirements of extras, defined in setup.py not setup.cfg
      --package="brotli>=1.0.9; (os_name != 'nt' or python_version >= '3') and platform_python_implementation == 'CPython'" \
      --package="brotlicffi>=0.8.0; (os_name != 'nt' or python_version >= '3') and platform_python_implementation != 'CPython'" \
      --package="brotlipy>=0.6.0; os_name == 'nt' and python_version < '3'" \
      --package="pyOpenSSL>=0.14" \
      --package="cryptography>=1.3.4" \
      --package="idna>=2.0.0" \
      --package="ipaddress; python_version=='2.7'" \
      --package="PySocks>=1.5.6,<2.0,!=1.5.7" \
      # python2 compat code
      --ignore-module StringIO Queue httplib \
      # development tools without explicit dependencies
      --ignore-module setuptools nox \
      # internal packages
      --ignore-module test dummyserver
      # google, ntlm, six are used in experimental extras: urllib3/docs/reference/contrib/index.rst

[testenv:attrs]
setenv =
    ORG=python-attrs
    PKG=attrs
    VER=22.1.0
deps = {env:PKG}[dev]=={env:VER}
commands =
    python -m bonded \
        attrs/ \
        --ignore-module attr \
        # all dependencies are extras, and only defined in setup.py
        # sphinx-notfound-page is used in config.py but not associated as an extension
        --package furo sphinx zope.interface\
        --package 'cloudpickle; python_implementation == "CPython"' \
        --package 'coverage[toml]>=5.0.2' hypothesis pympler 'pytest>=4.3.0' \
        --package 'mypy>=0.900,!=0.940' pytest-mypy-plugins \
        --package zope.interface pre-commit

[testenv:pyyaml]
setenv =
    ORG=yaml
    PKG=pyyaml
    VER=6.0
deps =
    {[testenv]deps}
    # build-system requires
    setuptools
    wheel
    Cython
commands =
    python -m bonded \
        pyyaml/ \
        # local modules
        --ignore-module yaml _yaml test_all test_appliance test_build test_build_ext \
        --ignore-module test_canonical test_constructor test_dump_load test_emitter \
        --ignore-module test_errors test_input_output test_mark test_multi_constructor \
        --ignore-module test_reader test_recursive test_representer test_resolver \
        --ignore-module test_schema test_sort_keys test_structure test_tokens \
        --ignore-module test_yaml test_yaml_ext

[testenv:click]
setenv =
    ORG=pallets
    PKG=click
    VER=8.1.3
commands_pre =
    {[testenv]commands_pre}
    python -m pip -qqq install -r click/requirements/dev.txt
commands =
    python -m bonded \
        click/ \
      --pyproject= \
      --requirements=click/requirements/dev.in \
      # requirements defined in setup.py
      --package "colorama; platform_system == 'Windows'" \
      --package "importlib-metadata; python_version < '3.8'" \
      # local modules
      --ignore-module conftest complex \
      # development tools without explicit dependencies
      --ignore-module setuptools \
      # only used by example project
      --ignore-module PIL

[testenv:cryptography]
setenv =
    ORG=pyca
    PKG=cryptography
    VER=37.0.4
deps =
    {env:PKG}[test,docs,docstest,sdist,pep8test,ssh]=={env:VER}
    # build-system requires
    setuptools>=40.6.0,!=60.9.0
    wheel
    # from dev-requirements.txt
    click
    tox >= 2.4.1
    twine >= 1.8.0
commands =
    python -m bonded -vvvvv \
        cryptography/ \
        --pyproject cryptography/pyproject.toml \
        --setup cryptography/setup.cfg \
        --requirements cryptography/dev-requirements.txt \
        # build-system requires
        --packages "setuptools>=40.6.0,!=60.9.0" \
        --packages wheel \
        --packages "setuptools-rust>=0.11.4" \
        # local modules
        --ignore-module tests cryptography_vectors

[tox]
isolated_build = True
envlist = urllib3,attrs,pyyaml,click,cryptography,rich

[testenv]
allowlist_externals=git
changedir={envdir}
download=true
deps = {env:PKG}=={env:VER}
commands_pre =
    - git -c advice.detachedHead=false clone git@github.com:{env:ORG:{env:PKG}}/{env:PKG}.git --depth 1 --branch {env:VER} --quiet

[testenv:urllib3]
setenv =
    PKG=urllib3
    VER=1.26.11
deps = {env:PKG}[socks,secure,brotli]=={env:VER}
commands_pre =
    {[testenv]commands_pre}
    python -m pip -qqq install -r urllib3{/}docs{/}requirements.txt
commands =
    bonded urllib3 \
      --requirements=urllib3{/}docs{/}requirements.txt \
      --pyproject= \
      --setup=urllib3{/}setup.cfg \
      # requirements of extras, defined in setup.py not setup.cfg
      --package "brotli>=1.0.9; (os_name != 'nt' or python_version >= '3') and platform_python_implementation == 'CPython'" \
      --package "brotlicffi>=0.8.0; (os_name != 'nt' or python_version >= '3') and platform_python_implementation != 'CPython'" \
      --package "brotlipy>=0.6.0; os_name == 'nt' and python_version < '3'" \
      --package "pyOpenSSL>=0.14" \
      --package "cryptography>=1.3.4" \
      --package "idna>=2.0.0" \
      --package "ipaddress; python_version=='2.7'" \
      --package "PySocks>=1.5.6,<2.0,!=1.5.7" \
      # python2 compat code
      --ignore-module StringIO Queue httplib \
      # these are constraints mixed with deps in requirements files
      --ignore-package requests win-inet-pton \
      # development tools without explicit dependencies
      --ignore-module setuptools nox \
      # experimental extras, noted to require additional packages: urllib3/docs/reference/contrib/index.rst
      --ignore-module google ntlm six \
      # optional test dependency, not declared anywhere
      --ignore-module mimetools

[testenv:attrs]
setenv =
    ORG=python-attrs
    PKG=attrs
    VER=22.1.0
deps = {env:PKG}[dev]=={env:VER}
commands =
    bonded attrs \
        # extras dependencies, only defined in setup.py
        # sphinx-notfound-page is used in config.py but not associated as an extension
        --package furo sphinx zope.interface \
        --package 'cloudpickle; python_implementation == "CPython"' \
        --package 'coverage[toml]>=5.0.2' hypothesis pympler 'pytest>=4.3.0' \
        --package 'mypy>=0.900,!=0.940' pytest-mypy-plugins \
        --exclude .git{/}

[testenv:pyyaml]
setenv =
    ORG=yaml
    PKG=pyyaml
    VER=6.0
deps =
    {[testenv]deps}
    # build-system requires
    setuptools
    wheel
    Cython
commands =
    bonded pyyaml \
        --ignore-module test_load \
        --exclude examples{/} \
        --exclude .git{/}

[testenv:click]
setenv =
    ORG=pallets
    PKG=click
    VER=8.1.3
deps =
    {[testenv]deps}
    # always install otherwise conditional dependencies
    colorama
    importlib-metadata
commands_pre =
    {[testenv]commands_pre}
    python -m pip -qqq install -r click{/}requirements{/}dev.txt
commands =
    bonded click \
      # lack of pyproject causes bonded's pyproject to be used
      --pyproject= \
      --requirements=click{/}requirements{/}dev.in \
      # requirements defined in setup.py
      --package "colorama; platform_system == 'Windows'" \
      --package "importlib-metadata; python_version < '3.8'" \
      # development tools without explicit dependencies
      --package setuptools \
      --ignore-package sphinx-tabs sphinx-issues sphinxcontrib-log-cabinet \ 
      --ignore-module typing_extensions \
      --exclude examples{/} \
      --exclude .git{/}

[testenv:cryptography]
setenv =
    ORG=pyca
    PKG=cryptography
    VER=39.0.2
deps =
    {env:PKG}[tox,test,test-randomorder,docs,docstest,sdist,pep8test,ssh]=={env:VER}
# sub-package
    {envdir}{/}cryptography{/}vectors
commands =
    bonded cryptography \
        --setup cryptography{/}setup.cfg \
        # release script dependencies not tracked
        --ignore-module click requests \
        # this is apparently a dep
        # https://github.com/pyca/cryptography/commit/29b40eaa062af0e1d6eb9733958bfd497dd8dc4d
        --ignore-package pyenchant \
        # used by mypy, not directly
        --ignore-package types-pytz types-requests \
        # as a lock file, all requirements are mentioned in here which gives some low confidence
        --exclude cryptography{/}ci-constraints-requirements.txt \
        --exclude docs{/} \
        --exclude .github{/} \
        --exclude .git{/}

[testenv:rich]
setenv =
    ORG=Textualize
    PKG=rich
    VER=v13.3.2
deps =
    {env:PKG}[jupyter]=={env:VER}
    poetry-core
    # poetry dev dependencies
    pytest
    black
    mypy
    pytest-cov
    attrs
    pre-commit
    asv
    setuptools # Textualize/rich #2884
    emoji # Textualize/rich #2884
commands_pre =
    {[testenv]commands_pre}
    python -m pip -qqq install -r rich{/}docs{/}requirements.txt
commands =
    bonded rich \
    --requirements=rich{/}docs{/}requirements.txt \
    # dependencies declared in poetry tables
    --package typing-extensions pygments ipywidgets markdown-it-py \
    --package pytest black mypy pytest-cov attrs pre-commit asv \
    --package setuptools wcwidth ipython emoji \ # Textualize/rich #2884
    --ignore-package sphinx-copybutton \
    --exclude examples{/}
